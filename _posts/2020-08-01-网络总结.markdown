---
layout: post
title:  "网络总结"
description: 总结一下对网络的认识.
categories: 网络
typora-root-url: ..
---

上网现在已经是我们日常生活中最熟悉的场景了，那么到底什么是网络呢？

### 网络有几种通信类型？
网络通信类型有三种类型，单工，半双工，全双工。
1. 单工，在网络通信的任何时刻，信息只能由一方A发送另一方B，比如无线广播
2. 半双工，在网络通信的任何时刻，信息既能由A传输到B，又能由B传输到A，但是此时刻只能存在一个方向上的传输，比如HTTP协议
3. 全双工，在网络通信的任何时刻，信息可以同时从A传输到B，又能从B传输到A，传输是双向的，比如TCP协议，Socket

### 网络分层模型：OSI七层模型和TCP\IP四层模型

- OSI七层模型

OSI七层模型是国际标准化组织制定的理论模型。由上到下分别为：应用层、表示层、会话层、传输层、网络层、数据链路层、物理层。

- TCP\IP四层模型

TCP\TP四层模型是基于OSI建立的实际实现的模型。分别为：应用层（应用层、表示层、会话层）、传输层、网络层、链路层（数据链路层、物理层）。

两者之间关系可表现为：

![TCP\IP模型与OSI模型关系图](/assets/images/2020-08-01/网络分层模型.png){:height="400px"}

<strong>注：其中TCP协议属于传输层，IP协议属于网络层，而http属于应用层。</strong>

### TCP三次握手和四次挥手（面试点）

![TCP三次握手建立连接](/assets/images/2020-08-01/TCP三次握手连接.png){:height="250px"}

TCP是面向连接传输的，所以需要双方都确认建立了连接，确保有可靠有效的连接。

具体过程：

1. 客户端C发送连接请求到服务端S

	C -> S : 此时S可以确认C可以发送数据

2. 服务端S收到客户端C的连接请求，同意建立连接（响应码），并发送和客户端C的连接请求

	S -> C : 此时C可以确认S可以接收数据(响应码)和发送数据

3.  客户端C收到响应码，并给服务端S一个连接响应码

	C -> S : 此时S确认了C可以接收数据(响应码)

问题：建立两次握手会出现什么问题？

解答：当网络不好，客户端给服务端发送的连接请求有滞留时，那么客户端会发送多次连接请求，但是当一个请求被服务端接收到时候，给客户端响应连接，此时已确认了客户端和服务端连接，但是当之后的一些请求陆续被服务端接收到，但是服务器并不知道已经确立连接了，所以导致会陆续给客户端连接响应码，这些后续的连接就属于无效连接了。

![TCP断开连接四次挥手](/assets/images/2020-08-01/TCP四次挥手.png){:height="250px"}

因为TCP协议属于全双工通信，即双方既可以发送数据也可以接收数据，所以双发都要确认断开连接。

具体过程：（假设客户端主动请求断开连接）

1. 客户端C请求断开连接（客户端不再进行发送数据）
2. 服务端S接到客户端C请求的断开连接，同意断开，给客户端C响应码（服务端不再接收数据）

...服务端一些数据还会继续发送给客户端，服务端数据发送完毕，才会请求断开连接（解释了为什么第2步和第3步不同时进行）

3. 服务端S请求断开连接（服务端不再进行发送数据）
4. 客户端C接到服务端S的请求，同意断开，给服务端S响应码（客户端不再接收数据）

### HTTP请求过程（一个url输入到浏览器请求后发生了什么？）

![http请求](/assets/images/2020-08-01/一个url进行http请求.png){:height="250px"}

具体过程：

1. url需要经过DNS解析，将域名解析成ip地址
2. 建立Socket连接
3. Socket连接成功后，根据http协议封装请求发送给服务器
4. 服务器接收到请求，将数据返回给客户端

<strong>DNS劫持：</strong>DNS劫持一般指域名劫持，通过攻击域名解析器（DNS），或伪造域名解析服务器的方法，把目标域名解析成错误的IP地址从而实现让用户无法访问到目标地址或者访问到钓鱼网站的目的。

问题：如何防止DNS劫持？
解答： 
1. 用ip直接访问
2. httpDNS, 可避免域名劫持问题。

	传统的DNS是使用UDP进行通信。
	httpDNS优势，可产看阿里巴巴提供的[HTTPDNS](https://help.aliyun.com/document_detail/30103.html?spm=a2c4g.11186623.6.543.1f196a4aHGyYC7)

### HTTP报文格式

- http请求包含请求头和请求体

```http
POST /v3/weather/weatherInfo HTTP/1.1
Host: restapi.amap.com
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

----WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="city"

北京
----WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="key"

ae6c53e2186f33bbf240a12d80672d1b
----WebKitFormBoundary7MA4YWxkTrZu0gW
```

```http
POST /v3/weather/weatherInfo HTTP/1.1
Host: restapi.amap.com
Content-Type: application/x-www-form-urlencoded

city=北京&key=ae6c53e2186f33bbf240a12d80672d1b 
```

http可以使用socket直接拼接字符串进行请求，协议内容解释规定的字符串格式。（Socket可以建立TCP/IP的连接）

如图所示，一个http包含3部分内容：
- 请求行
- 请求头
- 请求体

![http报文request格式](/assets/images/2020-08-01/http请求格式.png)

- 接收到的响应包含响应头和响应体

![http报文Response格式](/assets/images/2020-08-01/http报文response.png)

### HTTP响应码

分为四种类型：
- 2xx：成功，被服务器接收
- 3xx：重定向
- 4xx：请求错误，客户端错误
- 5xx：服务器错误

具体查看：[HTTP响应码](https://baike.baidu.com/item/HTTP%E7%8A%B6%E6%80%81%E7%A0%81/5053660?fr=aladdin#2_2)

### HTTPS

HTTP在传输数据时，都是明文进行传输的，无法保证数据安全性。
HTTPS是运行在TLS协议上的安全的HTTP协议。

注：保证信息安全的唯一路径就是：<strong>数据信息加密</strong>

### TLS/SSL握手过程

SSL握手过程都是明文的，因此SSL握手的重点是怎么在不安全的网络中安全的进行密钥的交换。

![RSA算法交换密钥](/assets/images/2020-08-01/RSA算法交换密钥.png)

![SSL握手过程](/assets/images/2020-08-01/SSL握手过程.png)

### 中间人攻击（抓包软件Charles等）

中间人攻击是指攻击者与通讯两端独立进行联系，并交换其所收到的数据，使得通信两端认为他们在进行一个私密联系，其实整个过程被中间人控制。

具体过程：

1. 服务器给客户端发送公钥
2. 中间人截获公钥，并保存在本地，并且伪造一个假公钥发送给客户端
3. 客户端收到假的公钥，利用这个伪造的假公钥对随机数进行加密，发送给服务器
4. 中间人接收到加密后的密钥，利用私钥进行解密拿到通讯密钥。同时利用之前保存的公钥，对随机数进行加密，发送给服务器
5. 服务器用私钥解密拿到假的密钥。

